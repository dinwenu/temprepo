import sqlite3
import os
import sys
from collections import OrderedDict as ODict

def eprint(*args, **kwargs):
    """Print to stderr."""
    print(*args, file=sys.stderr, **kwargs)

def eprintRow(row):
    """Print a sqlite3.Row to stderr."""
    for k in row.keys():
        eprint("{}: {}".format(k, row[k]))
    eprint("----")

def inspect_db(conn, deep_inspect=False):
    # CUPTI: https://docs.nvidia.com/cuda/archive/10.1/cupti/index.html
    # CUPTI_ACTIVITY: https://docs.nvidia.com/cupti/Cupti/annotated.html#structCUpti__ActivityAPI
    if deep_inspect:
        tables = """
CUPTI_ACTIVITY_KIND_MARKER
CUPTI_ACTIVITY_KIND_MARKER_DATA
CUPTI_ACTIVITY_KIND_MEMCPY
CUPTI_ACTIVITY_KIND_MEMCPY2
CUPTI_ACTIVITY_KIND_MEMSET
CUPTI_ACTIVITY_KIND_CONCURRENT_KERNEL
CUPTI_ACTIVITY_KIND_KERNEL
CUPTI_ACTIVITY_KIND_STREAM
""".strip().split("\n") 
        # output
        for t in tables:
            eprint("\n=== {} ===".format(t))
            for r in conn.execute("SELECT * FROM {}".format(t)):
                eprintRow(r)
    else:
        """Quickly dump data of all tables in database, with field names."""
        tables = """
CUPTI_ACTIVITY_KIND_BRANCH
CUPTI_ACTIVITY_KIND_CDP_KERNEL
CUPTI_ACTIVITY_KIND_CONCURRENT_KERNEL
CUPTI_ACTIVITY_KIND_CONTEXT
CUPTI_ACTIVITY_KIND_CUDA_EVENT
CUPTI_ACTIVITY_KIND_DEVICE
CUPTI_ACTIVITY_KIND_DEVICE_ATTRIBUTE
CUPTI_ACTIVITY_KIND_DRIVER
CUPTI_ACTIVITY_KIND_ENVIRONMENT
CUPTI_ACTIVITY_KIND_EVENT
CUPTI_ACTIVITY_KIND_EVENT_INSTANCE
CUPTI_ACTIVITY_KIND_EXTERNAL_CORRELATION
CUPTI_ACTIVITY_KIND_FUNCTION
CUPTI_ACTIVITY_KIND_GLOBAL_ACCESS
CUPTI_ACTIVITY_KIND_INSTANTANEOUS_EVENT
CUPTI_ACTIVITY_KIND_INSTANTANEOUS_EVENT_INSTANCE
CUPTI_ACTIVITY_KIND_INSTANTANEOUS_METRIC
CUPTI_ACTIVITY_KIND_INSTANTANEOUS_METRIC_INSTANCE
CUPTI_ACTIVITY_KIND_INSTRUCTION_CORRELATION
CUPTI_ACTIVITY_KIND_INSTRUCTION_EXECUTION
CUPTI_ACTIVITY_KIND_KERNEL
CUPTI_ACTIVITY_KIND_MARKER
CUPTI_ACTIVITY_KIND_MARKER_DATA
CUPTI_ACTIVITY_KIND_MEMCPY
CUPTI_ACTIVITY_KIND_MEMCPY2
CUPTI_ACTIVITY_KIND_MEMSET
CUPTI_ACTIVITY_KIND_METRIC
CUPTI_ACTIVITY_KIND_METRIC_INSTANCE
CUPTI_ACTIVITY_KIND_MODULE
CUPTI_ACTIVITY_KIND_NAME
CUPTI_ACTIVITY_KIND_NVLINK
CUPTI_ACTIVITY_KIND_OPENACC_DATA
CUPTI_ACTIVITY_KIND_OPENACC_LAUNCH
CUPTI_ACTIVITY_KIND_OPENACC_OTHER
CUPTI_ACTIVITY_KIND_OVERHEAD
CUPTI_ACTIVITY_KIND_PC_SAMPLING
CUPTI_ACTIVITY_KIND_PC_SAMPLING_RECORD_INFO
CUPTI_ACTIVITY_KIND_PREEMPTION
CUPTI_ACTIVITY_KIND_RUNTIME
CUPTI_ACTIVITY_KIND_SHARED_ACCESS
CUPTI_ACTIVITY_KIND_SOURCE_LOCATOR
CUPTI_ACTIVITY_KIND_STREAM
CUPTI_ACTIVITY_KIND_SYNCHRONIZATION
CUPTI_ACTIVITY_KIND_UNIFIED_MEMORY_COUNTER
""".strip().split("\n") 
        # output
        for t in tables:
            eprint("\n=== {} ===".format(t))
            for r in conn.execute("SELECT * FROM {} LIMIT 4".format(t)):
                eprintRow(r)
